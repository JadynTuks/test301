# name: CI/CD

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
   
#   lint:
#     name: Super Linter
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2
      
#       - name: Run Super Linter
#         uses: github/super-linter@v5
#         env:
#           VALIDATE_ALL_CODEBASE: false
#           DEFAULT_BRANCH: main
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#   build:
    
#     runs-on: [ubuntu-latest]
  
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2


#   test:
#     name: TEST
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
      
#       # - name: Set up Node.js
#       #   uses: actions/setup-node@v3
#       #   with:
#       #     node-version: '18'
#       #     cache: 'npm'
      
#       # - name: Install dependencies
#       #   run: npm ci
      
#       # - name: Download build artifacts
#       #   uses: actions/download-artifact@v3
#       #   with:
#       #     name: build-artifacts
      
#       # - name: Test UI
#       #   working-directory: ./ui
#       #   run: npm test
      
#       # - name: Test API
#       #   working-directory: ./api
#       #   run: npm test
        
#       # - name: Test CLI
#       #   working-directory: ./cli
#       #   run: npm test
        
#       # - name: Test Daemon
#       #   working-directory: ./daemon
#       #   run: npm test
        
#       # - name: Integration Tests
#       #   run: npm run test:integration


#   # deploy:
#   #   name: Deploy
#   #   needs: test
#   #   if: github.ref == 'refs/heads/main' # Only deploy from main branch
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - uses: actions/checkout@v3
      
#   #     - name: Download build artifacts
#   #       uses: actions/download-artifact@v3
#   #       with:
#   #         name: build-artifacts
      
#   #     - name: Set up Docker Buildx
#   #       uses: docker/setup-buildx-action@v2
      
#   #     - name: Login to Docker Hub
#   #       uses: docker/login-action@v2
#   #       with:
#   #         username: ${{ secrets.DOCKER_HUB_USERNAME }}
#   #         password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
#   #     - name: Build and push Docker images
#   #       uses: docker/build-push-action@v4
#   #       with:
#   #         context: .
#   #         push: true
#   #         tags: |
#   #           yourusername/yourapp:latest
#   #           yourusername/yourapp:${{ github.sha }}
      
#   #     - name: Deploy to server
#   #       uses: appleboy/ssh-action@master
#   #       with:
#   #         host: ${{ secrets.SERVER_HOST }}
#   #         username: ${{ secrets.SERVER_USERNAME }}
#   #         key: ${{ secrets.SSH_PRIVATE_KEY }}
#   #         script: |
#   #           cd /path/to/deployment
#   #           docker-compose pull
#   #           docker-compose up -d
     
